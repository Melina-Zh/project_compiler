.data
string0: .asciiz "enter func"
string1: .asciiz "interesting"
.space 4
start_label:
.text
la $gp, start_label
andi $gp, $gp, 0xFFFFFFFC
     ##var int i
     ##call main
addi $fp, $fp, 4
add $fp, $fp, $gp
jal main_label
nop
li $v0, 10
syscall
     ##exit
li $v0,10
syscall
     #void func3 ()
func3_label:
     ##ret 
jr $ra
     #int func ()
func_label:
     ##var char c
     #c = 97
lb $s0, 0($fp)
li $s0, 97
     ##printf string string0
li $v0, 4
la $a0, string0
syscall
     #@t0 = c
lw $s1, 4($fp)
move $s1, $s0
     #@t1 = @t0
lw $s2, 8($fp)
move $s2, $s1
     #@t1 = @t1 ADD 1
addi $s2, $s2, 1
     ##ret @t1
move $v0, $s2
jr $ra
     ##ret 0
li $v0, 0
jr $ra
     #void main ()
sb $s0, 0($fp)
sw $s1, 4($fp)
sw $s2, 8($fp)
main_label:
     ##var int a
     ##array char cc [] 10
     ##call func
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
addi $fp, $fp, 16
jal func_label
nop
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
     ##get @t2
lw $s3, 24($fp)
move $s3, $v0
     #@t3 = @t2
lw $s4, 28($fp)
move $s4, $s3
     #@t4 = @t3
lw $s5, 32($fp)
move $s5, $s4
     #a = @t4
lw $s6, 0($fp)
move $s6, $s5
     ##GOTO main_end_if0
sw $s3, 24($fp)
sw $s4, 28($fp)
sw $s5, 32($fp)
sw $s6, 0($fp)
j main_end_if0
nop
     ##printf string string1
li $v0, 4
la $a0, string1
syscall
     #main_end_if0 :
main_end_if0:
     ##call func3
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
addi $fp, $fp, 36
jal func3_label
nop
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
     #@t5 = a
lw $s7, 36($fp)
lw $s0, 0($fp)
move $s7, $s0
     #@t6 = @t5
lw $s1, 40($fp)
move $s1, $s7
     ##printf int @t6
li $v0, 1
move $a0, $s1
syscall
     ##ret 
jr $ra
